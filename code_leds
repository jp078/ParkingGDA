#!/usr/bin/env python3
import time
import RPi.GPIO as GPIO
import mysql.connector
from datetime import datetime
import BlynkLib

BLYNK_AUTH   = '28fx8r48XhkSqC-jUBGSGopJ4Uui95X7'
BLYNK_SERVER = 'blynk.cloud'
BLYNK_PORT   = 443

blynk = BlynkLib.Blynk(BLYNK_AUTH, server=BLYNK_SERVER, port=BLYNK_PORT)

V_PIN_ESTADO = 0


TRIG_PIN       = 23  
ECHO_PIN       = 24  
GREEN_PIN          = 20
RED_PIN      = 21  
UMBRAL_OCUPADO = 6.0  

GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)
GPIO.setup(RED_PIN, GPIO.OUT)
GPIO.setup(GREEN_PIN, GPIO.OUT)


GPIO.output(RED_PIN, False)
GPIO.output(GREEN_PIN, False)


DB_CONFIG = {
    'host':     'localhost',
    'user':     'root',      
    'password': '',    
    'database': 'ParkeaTec'
}

ID_ESPACIO = 1


def medir_distancia():
   
    GPIO.output(TRIG_PIN, False)
    time.sleep(0.05)

    GPIO.output(TRIG_PIN, True)
    time.sleep(0.00001)
    GPIO.output(TRIG_PIN, False)

    start_wait = time.time()
    timeout_start = start_wait + 0.02
    while GPIO.input(ECHO_PIN) == 0:
        if time.time() > timeout_start:
            return None

    pulse_start = time.time()
    timeout_end = pulse_start + 0.02
    while GPIO.input(ECHO_PIN) == 1:
        if time.time() > timeout_end:
            return None

    pulse_end = time.time()
    duracion = pulse_end - pulse_start
    return (duracion * 34300) / 2


def insertar_lectura(estado, timestamp, id_espacio=ID_ESPACIO):
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        sql_insert = (
            "INSERT INTO Lectura (idEspacio, fechaHora, estado)"
            " VALUES (%s, %s, %s);"
        )
        cursor.execute(sql_insert, (id_espacio, timestamp, estado))
        conn.commit()
    except mysql.connector.Error as err:
        print(f"[ERROR BD] No se pudo insertar en Lectura: {err}")
    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()


@blynk.on("connect")
def blynk_connected_handler():
    print("[BLYNK] Conectado al servidor Blynk.")


try:
    print("Iniciando sistema (Ctrl+C para salir)ï¿½")
    while True:
        blynk.run()

        distancia = medir_distancia()
        ahora = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if distancia is None:
            estado_sensor = "Libre"
            print(f"[DEBUG] No se detectï¿½ eco ? \"{estado_sensor}\"")
        else:
            print(f"[DEBUG] Distancia: {distancia:.1f} cm", end="  ?  ")
            estado_sensor = "Ocupado" if distancia <= UMBRAL_OCUPADO else "Libre"
            print(estado_sensor)

      
        GPIO.output(RED_PIN, estado_sensor == "Ocupado")
        GPIO.output(GREEN_PIN, estado_sensor == "Libre")

        insertar_lectura(estado_sensor, ahora)

       
        blynk.virtual_write(V_PIN_ESTADO, estado_sensor)

        time.sleep(0.5)

except KeyboardInterrupt:
    print("\nDetenido por el usuario. Liberando GPIOï¿½")

finally:
    GPIO.cleanup()
